name: Python AI Agent Toolkit Publish

on:
  push:
    tags:
      - 'py-v*.*.*'

jobs:
  publish:
    name: Build and Publish Python Packages
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write # Required for PyPI trusted publishing

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Important for getting correct version info

      - name: Extract version from tag
        id: extract_version
        run: |
          # Extract version from py-v*.*.* format
          TAG=${{ github.ref_name }}
          VERSION=${TAG#py-v}
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
          cache: 'pip'

      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build twine pytest ruff

      - name: Run linters
        working-directory: python
        run: ruff check .

      - name: Run tests
        working-directory: python
        run: pytest
      
      # Function to build and publish a package
      - name: Build and publish SDK package
        working-directory: python/src/radius_ai_agent_sdk
        run: |
          python -m build
          twine check dist/*
          twine upload dist/*
        env:
          TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}

      # Wallets
      - name: Build and publish EVM wallet package
        working-directory: python/src/wallets/evm
        run: |
          python -m build
          twine check dist/*
          twine upload dist/*
        env:
          TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}

      - name: Build and publish Web3 wallet package
        working-directory: python/src/wallets/web3
        run: |
          python -m build
          twine check dist/*
          twine upload dist/*
        env:
          TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}

      # Plugins
      - name: Build and publish ERC20 plugin package
        working-directory: python/src/plugins/erc20
        run: |
          python -m build
          twine check dist/*
          twine upload dist/*
        env:
          TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}

      - name: Build and publish JSON-RPC plugin package
        working-directory: python/src/plugins/jsonrpc
        run: |
          python -m build
          twine check dist/*
          twine upload dist/*
        env:
          TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}

      - name: Build and publish Uniswap plugin package
        working-directory: python/src/plugins/uniswap
        run: |
          python -m build
          twine check dist/*
          twine upload dist/*
        env:
          TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}

      # Adapters
      - name: Build and publish LangChain adapter package
        working-directory: python/src/adapters/langchain
        run: |
          python -m build
          twine check dist/*
          twine upload dist/*
        env:
          TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}