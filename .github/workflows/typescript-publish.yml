name: TypeScript AI Agent Toolkit Publish

on:
  push:
    tags:
      - 'ts-v*.*.*'

jobs:
  publish:
    name: Build and Publish
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write # Required for provenance

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Important for getting correct version info

      - name: Extract version from tag
        id: extract_version
        run: |
          # Extract version from ts-v*.*.* format
          TAG=${{ github.ref_name }}
          VERSION=${TAG#ts-v}
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'
      
      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: '9'
          run_install: false
      
      - name: Install dependencies
        working-directory: typescript
        run: pnpm install
        env:
          CI: true
      
      - name: Run linters
        working-directory: typescript
        run: pnpm lint
      
      - name: Run tests
        working-directory: typescript
        run: pnpm test
      
      - name: Update versions in all package.json files
        working-directory: typescript
        run: |
          # Update version in root package.json
          jq '.version = "${{ steps.extract_version.outputs.version }}"' package.json > package.json.tmp
          mv package.json.tmp package.json
          
          # Find all package.json files in the packages directory
          find ./packages -name 'package.json' -not -path "*/node_modules/*" | while read pkg; do
            echo "Updating version in $pkg"
            
            # Update version in each package.json
            jq '.version = "${{ steps.extract_version.outputs.version }}"' $pkg > $pkg.tmp
            mv $pkg.tmp $pkg
          done
      
      - name: Build all packages
        working-directory: typescript
        run: pnpm build:all:prod
      
      - name: Publish packages in order
        working-directory: typescript
        run: |
          # Function to publish a package
          publish_package() {
            local pkg_dir=$1
            echo "Publishing package in $pkg_dir"
            cd "$pkg_dir"
            
            # If this is the umbrella package, run the replace-workspace-refs script
            if [ "$pkg_dir" = "." ]; then
              echo "Running replace-workspace-refs script for umbrella package"
              pnpm replace-workspace-refs
            fi
            
            npm publish --provenance --access public
            cd - > /dev/null
          }
          
          # Publish packages in dependency order
          publish_package "./packages/core"
          publish_package "./packages/wallets"
          
          # Publish adapters
          publish_package "./packages/adapters/langchain"
          publish_package "./packages/adapters/model-context-protocol"
          publish_package "./packages/adapters/vercel-ai"
          
          # Publish plugins
          publish_package "./packages/plugins/contracts"
          publish_package "./packages/plugins/crypto"
          publish_package "./packages/plugins/erc20"
          publish_package "./packages/plugins/uniswap"
          
          # Finally publish the umbrella package
          publish_package "."
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
